<UserControl x:Class="PodcatcherDotNet.Views.FeedView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="FrameworkElement" x:Key="HasUrlVisibilityStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding HasUrl}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding HasUrl}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="FrameworkElement" x:Key="IsPodcastVisibilityStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsPodcast}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsPodcast}" Value="False">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}" x:Key="ItemIsReadStyle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsRead}" Value="False">
                    <Setter Property="FontWeight" Value="Bold"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsRead}" Value="True">
                    <Setter Property="FontWeight" Value="Normal"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="ItemTemplate">
            <TextBlock Text="{Binding Title}" Style="{StaticResource ItemIsReadStyle}" TextWrapping="Wrap"/>
        </DataTemplate>

        <DataTemplate x:Key="SelectedTemplate">
            <Grid cal:Bind.Model="{Binding}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock x:Name="Title" Grid.Row="0" Grid.Column="0" Style="{StaticResource ItemIsReadStyle}" TextWrapping="Wrap" FontSize="16" Margin="0,4,0,2"/>

                <Menu Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <MenuItem>
                        <MenuItem.Header>
                            <Image Source="/PodcatcherDotNet;component/Resources/DownArrow16.png" Width="16" Height="16"/>
                        </MenuItem.Header>
                        <MenuItem Header="Mark as Read" cal:Message.Attach="MarkAsRead()">
                            <MenuItem.Icon>
                                <Image Source="/PodcatcherDotNet;component/Resources/Flag16.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Mark as Unread" cal:Message.Attach="MarkAsUnread()"/>
                        <Separator/>
                        <MenuItem Header="Remove" cal:Message.Attach="Remove()">
                            <MenuItem.Icon>
                                <Image Source="/PodcatcherDotNet;component/Resources/Remove16.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator Style="{StaticResource HasUrlVisibilityStyle}"/>
                        <MenuItem Header="View in Browser" cal:Message.Attach="ViewInInternalBrowser()" Style="{StaticResource HasUrlVisibilityStyle}">
                            <MenuItem.Icon>
                                <Image Source="/PodcatcherDotNet;component/Resources/Browser16.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="View in Browser (External)" cal:Message.Attach="ViewInExternalBrowser()" Style="{StaticResource HasUrlVisibilityStyle}"/>
                        <Separator Style="{StaticResource IsPodcastVisibilityStyle}"/>
                        <MenuItem  Header="Download Podcast" cal:Message.Attach="DownloadPodcast()" Style="{StaticResource IsPodcastVisibilityStyle}">
                            <MenuItem.Icon>
                                <Image Source="/PodcatcherDotNet;component/Resources/Podcast16.png" Width="16" Height="16"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem  Header="Download Podcast As..." cal:Message.Attach="DownloadPodcastAs()" Style="{StaticResource IsPodcastVisibilityStyle}"/>
                    </MenuItem>
                </Menu>

                <TextBlock x:Name="Summary" Grid.Row="1" Grid.ColumnSpan="2" TextWrapping="Wrap" Margin="0,0,0,4">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding HasSummary}" Value="True">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding HasSummary}" Value="False">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0" Margin="0,0,0,4" VerticalAlignment="Center">
                    <TextBlock Text="Published " FontSize="11"/>
                    <TextBlock x:Name="PublishedPretty" FontSize="11"/>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1" HorizontalAlignment="Right" Margin="0,0,0,4">
                    <Button x:Name="ToggleMarkAsRead" BorderThickness="0" ToolTip="Mark as Read">
                        <Image Source="/PodcatcherDotNet;component/Resources/Envelope16.png" Width="16" Height="16"/>
                    </Button>
                    <Button x:Name="ViewInBrowser" BorderThickness="0" ToolTip="Browser" Style="{StaticResource HasUrlVisibilityStyle}" Margin="8,0,0,0">
                        <Image Source="/PodcatcherDotNet;component/Resources/Browser16.png" Width="16" Height="16"/>
                    </Button>
                    <Button x:Name="DownloadPodcast" BorderThickness="0" ToolTip="Download" Style="{StaticResource IsPodcastVisibilityStyle}" Margin="8,0,0,0">
                        <Image  Width="16" Height="16" Source="/PodcatcherDotNet;component/Resources/Download16.png"/>
                    </Button>
                </StackPanel>
            </Grid>
        </DataTemplate>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="ContainerStyle">
            <Setter Property="ContentTemplate" Value="{StaticResource ItemTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="ContentTemplate" Value="{StaticResource SelectedTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <TextBlock Text="{Binding Title}" Grid.Row="0" Grid.ColumnSpan="2" FontSize="22" Margin="0,0,0,8"/>

        <ListBox ItemsSource="{Binding ItemsView}" SelectedItem="{Binding ActiveItem, Mode=TwoWay}" 
                 Grid.ColumnSpan="2" Grid.Row="1" ItemContainerStyle="{StaticResource ContainerStyle}" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 HorizontalContentAlignment="Stretch" Margin="0,0,0,8"/>

        <xctk:WatermarkTextBox Watermark="Search Items" Grid.Row="2" x:Name="FilterTerm" Margin="0,0,8,0">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <cal:ActionMessage MethodName="FilterTermChanged"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </xctk:WatermarkTextBox>

        <Menu Grid.Column="1" Grid.Row="2" VerticalAlignment="Center">
            <MenuItem Header="Filter">
                <MenuItem Header="_All" x:Name="FilterAll" IsChecked="{Binding IsFilterAll}"/>
                <Separator/>
                <MenuItem Header="_Unread" x:Name="FilterUnread" IsChecked="{Binding IsFilterUnread}"/>
                <MenuItem Header="_Podcasts" x:Name="FilterPodcasts" IsChecked="{Binding IsFilterPodcasts}"/>
                <Separator/>
                <MenuItem Header="_Today" x:Name="FilterToday" IsChecked="{Binding IsFilterToday}"/>
                <MenuItem Header="_Yesterday" x:Name="FilterYesterday" IsChecked="{Binding IsFilterYesterday}"/>
                <MenuItem Header="This _Week" x:Name="FilterThisWeek" IsChecked="{Binding IsFilterThisWeek}"/>
            </MenuItem>
        </Menu>
    </Grid>
</UserControl>

    